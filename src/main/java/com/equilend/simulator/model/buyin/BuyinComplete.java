/*
 * 1Source Ledger API
 * 1Source Ledger API provides client access to the 1Source Ledger. You can find out more about 1Source at [https://equilend.com](https://equilend.com).  This specification is work in progress. The design is meant to model the securities lending life cycle in as clean a way as possible while being robust enough to easily translate to ISLA CDM workflows and data model.  API specification is the intellectual property of EquiLend LLC and should not be copied or disseminated in any way. 
 *
 * OpenAPI spec version: 1.0.5
 * Contact: 1source_help@equilend.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.equilend.simulator.model.buyin;

import com.equilend.simulator.model.instrument.price.Price;
import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.LocalDate;
import java.time.OffsetDateTime;
/**
 * BuyinComplete
 */



public class BuyinComplete {
  @JsonProperty("buyinCompleteId")
  private String buyinCompleteId = null;

  @JsonProperty("contractId")
  private String contractId = null;

  @JsonProperty("status")
  private BuyinCompleteStatus status = null;

  @JsonProperty("quantity")
  private Integer quantity = null;

  @JsonProperty("buyinDate")
  private LocalDate buyinDate = null;

  @JsonProperty("price")
  private Price price = null;

  @JsonProperty("lastUpdateDatetime")
  private OffsetDateTime lastUpdateDatetime = null;

  public BuyinComplete buyinCompleteId(String buyinCompleteId) {
    this.buyinCompleteId = buyinCompleteId;
    return this;
  }

   /**
   * Get buyinCompleteId
   * @return buyinCompleteId
  **/
  @Schema(required = true, description = "")
  public String getBuyinCompleteId() {
    return buyinCompleteId;
  }

  public void setBuyinCompleteId(String buyinCompleteId) {
    this.buyinCompleteId = buyinCompleteId;
  }

  public BuyinComplete contractId(String contractId) {
    this.contractId = contractId;
    return this;
  }

   /**
   * Get contractId
   * @return contractId
  **/
  @Schema(required = true, description = "")
  public String getContractId() {
    return contractId;
  }

  public void setContractId(String contractId) {
    this.contractId = contractId;
  }

  public BuyinComplete status(BuyinCompleteStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(required = true, description = "")
  public BuyinCompleteStatus getStatus() {
    return status;
  }

  public void setStatus(BuyinCompleteStatus status) {
    this.status = status;
  }

  public BuyinComplete quantity(Integer quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @Schema(required = true, description = "")
  public Integer getQuantity() {
    return quantity;
  }

  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }

  public BuyinComplete buyinDate(LocalDate buyinDate) {
    this.buyinDate = buyinDate;
    return this;
  }

   /**
   * Get buyinDate
   * @return buyinDate
  **/
  @Schema(description = "")
  public LocalDate getBuyinDate() {
    return buyinDate;
  }

  public void setBuyinDate(LocalDate buyinDate) {
    this.buyinDate = buyinDate;
  }

  public BuyinComplete price(Price price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @Schema(description = "")
  public Price getPrice() {
    return price;
  }

  public void setPrice(Price price) {
    this.price = price;
  }

  public BuyinComplete lastUpdateDatetime(OffsetDateTime lastUpdateDatetime) {
    this.lastUpdateDatetime = lastUpdateDatetime;
    return this;
  }

   /**
   * Get lastUpdateDatetime
   * @return lastUpdateDatetime
  **/
  @Schema(required = true, description = "")
  public OffsetDateTime getLastUpdateDatetime() {
    return lastUpdateDatetime;
  }

  public void setLastUpdateDatetime(OffsetDateTime lastUpdateDatetime) {
    this.lastUpdateDatetime = lastUpdateDatetime;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BuyinComplete buyinComplete = (BuyinComplete) o;
    return Objects.equals(this.buyinCompleteId, buyinComplete.buyinCompleteId) &&
        Objects.equals(this.contractId, buyinComplete.contractId) &&
        Objects.equals(this.status, buyinComplete.status) &&
        Objects.equals(this.quantity, buyinComplete.quantity) &&
        Objects.equals(this.buyinDate, buyinComplete.buyinDate) &&
        Objects.equals(this.price, buyinComplete.price) &&
        Objects.equals(this.lastUpdateDatetime, buyinComplete.lastUpdateDatetime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(buyinCompleteId, contractId, status, quantity, buyinDate, price, lastUpdateDatetime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BuyinComplete {\n");
    
    sb.append("    buyinCompleteId: ").append(toIndentedString(buyinCompleteId)).append("\n");
    sb.append("    contractId: ").append(toIndentedString(contractId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    buyinDate: ").append(toIndentedString(buyinDate)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    lastUpdateDatetime: ").append(toIndentedString(lastUpdateDatetime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
